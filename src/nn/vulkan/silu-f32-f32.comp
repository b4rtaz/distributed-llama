#version 450

#define N_THREADS 32

layout(local_size_x = N_THREADS, local_size_y = 1, local_size_z = 1) in;

layout(binding = 0) readonly buffer inputBuffer { float x[]; };
layout(binding = 1) writeonly buffer outputBuffer { float y[]; };
layout(binding = 2) readonly uniform globalConfigBuffer {
    uint batchSize;
};
layout(binding = 3) readonly uniform opConfigBuffer {
    uint inputSizeX;
    uint outputSizeX;
};

void main() {
    const uint threadIndex = uint(gl_LocalInvocationID.x);
    const uint batchIndex = uint(gl_GlobalInvocationID.y);

    const uint slice = inputSizeX / N_THREADS;
    const uint offset = threadIndex * slice + batchIndex * inputSizeX;

    float sum = 0.0;
    for (uint i = 0; i < slice; i++) {
        uint j = offset + i;
        float xj = x[j];
        y[j] = xj / (1.0 + exp(-xj));
    }
}
