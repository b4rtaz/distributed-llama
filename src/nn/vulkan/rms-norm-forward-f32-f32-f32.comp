#version 450

#extension GL_EXT_control_flow_attributes : enable

#define N_BATCHES 32

layout(local_size_x_id = 0, local_size_y = 1, local_size_z = 1) in;

layout(constant_id = 0) const uint N_THREADS = 32;

struct BatchInfo {
    uint inputOffset;
    uint inputSizeX;
    uint outputOffset;
    uint outputSizeX;
};

layout(binding = 0) readonly buffer inputBuffer { float x[]; };
layout(binding = 1) writeonly buffer outputBuffer { float y[]; };
layout(binding = 2) readonly uniform batchInfosBuffer { BatchInfo infos[N_BATCHES]; };
layout(binding = 3) readonly buffer weightBuffer { float weight[]; };
layout(binding = 4) readonly uniform configBuffer {
    uint invRmsBufferIndex; // not used
    uint nColumns;
};
layout(binding = 5) readonly buffer invRmsBuffer { float invRms[]; };

void main() {
    const uint threadIndex = gl_LocalInvocationID.x;
    const uint batchIndex = gl_WorkGroupID.y;

    const BatchInfo info = infos[batchIndex];
    const uint dim = info.inputSizeX;
    const uint colDim = dim / nColumns;
    const uint xOffset = info.inputOffset;
    const uint yOffset = info.outputOffset;

    for (uint i = threadIndex; i < dim; i += N_THREADS) {
        const float s = invRms[batchIndex * nColumns + i / colDim];
        y[yOffset + i] = (x[xOffset + i] * s) * weight[i % colDim];
    }
}
